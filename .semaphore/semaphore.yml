version: v1.0
name: Continuous Integration Pipelines
agent:
  machine:
    type: f1-standard-2
    os_image: ubuntu2004
  containers:
    - name: appium
      image: "appium/appium:latest"  # Official Appium Docker image
    - name: database
      image: 'registry.semaphoreci.com/postgres:11'

blocks:
  - name: Setup Appium Emulator
    dependencies: []
    task:
      jobs:
        - name: Setup and Start Appium Emulator
          commands:
            - checkout
            - apt-get update
            - apt-get install -y openjdk-11-jdk curl wget unzip  # Install only the necessary tools
            - wget https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip
            - unzip commandlinetools-linux-7302050_latest.zip -d /usr/local/android
            - yes | /usr/local/android/cmdline-tools/bin/sdkmanager --sdk_root=/usr/local/android --licenses
            - /usr/local/android/cmdline-tools/bin/sdkmanager --sdk_root=/usr/local/android "platform-tools" "emulator" "system-images;android-29;google_apis;x86_64"
            - /usr/local/android/cmdline-tools/bin/avdmanager create avd -n test_avd -k "system-images;android-29;google_apis;x86_64" --device "Nexus 5X" --force
            - nohup /usr/local/android/emulator/emulator -avd test_avd -no-window -gpu swiftshader_indirect &  # Start emulator in the background
            - adb wait-for-device  # Wait for the emulator to fully start
            - echo "Appium and Android Emulator are running."

  - name: Run Appium Test and Capture Screenshot
    dependencies:
      - Setup Appium Emulator
    task:
      jobs:
        - name: Run Appium Test
          commands:
            - echo "Running Appium test..."
            - appium &  # Start Appium server in the background
            - sleep 10  # Ensure Appium has time to start up
            - node appium_test.js  # Run the Appium test script
            - node capture_screenshot.js  # Capture screenshot using Appium
            - mv screenshot.png /tmp/screenshot.png  # Move screenshot to /tmp
            - artifact push job /tmp/screenshot.png  # Push screenshot as artifact

  - name: Clean up and Finalize
    dependencies:
      - Run Appium Test and Capture Screenshot
    task:
      jobs:
        - name: Clean up
          commands:
            - echo "Cleaning up... Removing temporary files."
            - rm -rf /tmp/screenshot.png  # Clean-up step after artifact is pushed
            - echo "Clean-up complete"
