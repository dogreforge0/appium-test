version: v1.0

name: Continuous Integration Pipeline

agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
  containers:
    - name: android-emulator
      image: "budtmo/docker-android"
      resource_requests:
        memory: 4096Mi
        cpu: 2
    - name: appium
      image: "appium/appium"  # For Appium automation

blocks:
  - name: Setup and Run Emulator
    task:
      jobs:
        - name: Start Android Emulator and Take Screenshot
          commands:
            - checkout
            - docker pull budtmo/docker-android  # Make sure the latest image is used
            - docker run -d --privileged -p 6080:6080 -e DEVICE="Nexus_5X_API_29" --name android-emulator budtmo/docker-android
            - sleep 60  # Wait for the emulator to initialize
            - echo "Android emulator running."

            # Optional: Access the emulator via a VNC server (for debugging)
            - echo "You can now access the emulator through http://localhost:6080"

            # Assuming Appium is installed in the appium container:
            - docker exec android-emulator /bin/bash -c "apt-get update && apt-get install -y unzip wget curl"  # Install dependencies inside the container
            - docker exec android-emulator /bin/bash -c "wget https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip -O /tmp/cmdline-tools.zip"
            - docker exec android-emulator /bin/bash -c "unzip /tmp/cmdline-tools.zip -d /usr/local/android"
            - docker exec android-emulator /bin/bash -c "/usr/local/android/cmdline-tools/bin/sdkmanager --sdk_root=/usr/local/android --licenses"
            - docker exec android-emulator /bin/bash -c "/usr/local/android/cmdline-tools/bin/sdkmanager --sdk_root=/usr/local/android platform-tools emulator"
            - docker exec android-emulator /bin/bash -c "/usr/local/android/emulator/emulator -avd Nexus_5X_API_29 -no-window -gpu swiftshader_indirect &"

            # After emulator is running, set up Appium to interact with it
            - sleep 120  # Ensure the emulator is fully initialized

            # Install Appium client and start Appium server
            - docker exec appium /bin/bash -c "npm install -g appium"  # Install Appium
            - docker exec appium /bin/bash -c "appium &"  # Start Appium server

            # Now take a screenshot using Appium (or directly using ADB commands)
            - docker exec appium /bin/bash -c "appium & sleep 5 && node capture_screenshot.js"
            
            # Assuming `capture_screenshot.js` is an Appium script to capture a screenshot, and store it at `/tmp/screenshot.png`
            - docker exec appium /bin/bash -c "mv /tmp/screenshot.png /tmp/screenshot.png"

            # You can use the `artifact push` command to save the screenshot for later use
            - artifact push /tmp/screenshot.png
            - echo "Screenshot taken and stored."
  - name: Cleanup
    dependencies:
      - Setup and Run Emulator
    task:
      jobs:
        - name: Stop Emulator and Clean Up
          commands:
            - echo "Cleaning up..."
            - docker stop android-emulator
            - docker rm android-emulator
            - echo "Emulator stopped and container removed."
